{"version":3,"sources":["components/products.js","components/productsData.js","components/cart.js","App.js","reportWebVitals.js","index.js"],"names":["ProductsList","props","product","onAdd","className","name","price","description","onClick","src","image","alt","height","Products","products","map","category","id","productData","productcategory","amount","Cart","cartItems","onRemove","clearCart","itemsPrice","reduce","a","b","useState","showForm","setShowForm","length","item","toFixed","type","required","alert","App","setCartItems","exist","find","i","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa4c1c7b.chunk.js","sourcesContent":["import React from 'react';\r\nconst ProductsList = (props) => {\r\n    const { product, onAdd } = props;\r\n    return (\r\n        <div className=\"product\">\r\n            <div className=\"product-details\">\r\n                <h2>{product.name}</h2>\r\n                <h3 className=\"product-price\"> {product.price}€</h3>\r\n                <p>{product.description}</p>\r\n\r\n                <button onClick={() => onAdd(product)}>Add to cart</button>\r\n                <div className=\"product-image\">\r\n                    <img src={product.image} alt={product.name} height=\"300\" />\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst Products = (props) => {\r\n    const { products, onAdd } = props;\r\n    return (\r\n        <div className=\"products\">\r\n            {products.map(product => <ProductsList key={product.id} category={product.category} product={product} onAdd={onAdd} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport { ProductsList, Products };","const product1 = {\r\n    id: 1,\r\n    productcategory: 'Shirts',\r\n    name: 'T-Paita',\r\n    price: 10,\r\n    image: 'https://cdn.pixabay.com/photo/2016/12/06/09/31/blank-1886008_1280.png',\r\n    description: 'Punainen T-Paita',\r\n    amount: 0\r\n};\r\n\r\nconst product2 = {\r\n    id: 2,\r\n    productcategory: 'Hats',\r\n    name: 'Lippalakki',\r\n    price: 6,\r\n    image: 'https://axonstatic.se/items/520/18877_blu.jpg',\r\n    description: 'Sininen Lippalakki',\r\n    amount: 0\r\n};\r\n\r\nconst product3 = {\r\n    id: 3,\r\n    productcategory: 'Mugs',\r\n    name: 'Muki',\r\n    price: 5,\r\n    image: 'https://p2.piqsels.com/preview/654/941/89/mug-glass-cup-blue-thumbnail.jpg',\r\n    description: 'Sininen Muki',\r\n    amount: 0\r\n};\r\n\r\nconst productData = [product1, product2, product3];\r\n\r\nexport { productData };","import React, { useState } from 'react';\r\nconst Cart = (props) => {\r\n    const { cartItems, onAdd, onRemove, clearCart } = props;\r\n    const itemsPrice = cartItems.reduce((a, b) => a + b.amount * b.price, 0);\r\n    const [showForm, setShowForm] = useState(false);\r\n    return (\r\n        <div className=\"cart\">\r\n            <h2>Ostoskori</h2>\r\n            {cartItems.length === 0 && <div>Ostoskori on tyhjä</div>}\r\n            {cartItems.map((item) => (\r\n                <div key={item.id} className=\"row\">\r\n                    <div className=\"col-2\">{item.name}</div>\r\n                    <div className=\"col-2\">\r\n                        <button onClick={() => onAdd(item)} className=\"add\">+</button>\r\n                        <button onClick={() => onRemove(item)} className=\"remove\">-</button>\r\n                    </div>\r\n                    <div className=\"col-2 text-right\">\r\n                        {item.amount} x {item.price.toFixed(2)}€\r\n\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            \r\n            {cartItems.length !== 0 && (\r\n                <div>\r\n                    <button onClick={() => clearCart()}>Tyhjennä ostoskori</button>\r\n                    <hr></hr>\r\n                    <div>\r\n                        <h3>Tuotteiden hinta</h3>\r\n                        <div>{itemsPrice.toFixed(2)}€</div>\r\n                        <button onClick={() => setShowForm(!showForm)}>{showForm ? \"Peruuta tilaus\":\"Vahvista tilaus\"}</button>\r\n                        {showForm && <form>\r\n                            <div>\r\n                                <label>Nimi</label>\r\n                                <input type=\"text\" required/>\r\n                            </div>\r\n                            <div>\r\n                                <label>Puhelinnumero</label>\r\n                                <input type=\"number\" required/>\r\n                            </div>\r\n                            <div>\r\n                                <label>Osoite</label>\r\n                                <input type=\"text\" required/>\r\n                            </div>\r\n                            <div>\r\n                                <label>Postinumero</label>\r\n                                <input type=\"number\" required/>\r\n                            </div>\r\n                            <div>\r\n                                <label>Postitoimipaikka</label>\r\n                                <input type=\"text\" required/>\r\n                            </div>\r\n                            <button type=\"submit\" onClick={() => alert('Kiitos tilauksesta!')}>Tilaa</button>\r\n                        </form> }\r\n                    </div>\r\n                    <hr />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { Cart };","import './App.css';\r\n\r\nimport React, { useState } from 'react';\r\nimport { Products } from './components/products.js';\r\nimport { productData } from './components/productsData.js';\r\nimport { Cart } from './components/cart.js';\r\n\r\n\r\nfunction App() {\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  const onAdd = (product) => {\r\n    const exist = cartItems.find((i) => i.id === product.id);\r\n    if (exist) {\r\n      setCartItems(\r\n        cartItems.map((i) =>\r\n          i.id === product.id ? { ...exist, amount: exist.amount + 1 } : i\r\n        )\r\n      );\r\n    } else {\r\n      setCartItems([...cartItems, { ...product, amount: 1 }]);\r\n    }\r\n  };\r\n  const clearCart = () => {\r\n    setCartItems([]);\r\n  };\r\n  const onRemove = (product) => {\r\n    const exist = cartItems.find((i) => i.id === product.id);\r\n    if (exist.amount === 1) {\r\n      setCartItems(cartItems.filter((i) => i.id !== product.id));\r\n    } else {\r\n      setCartItems(\r\n        cartItems.map((i) =>\r\n          i.id === product.id ? { ...exist, amount: exist.amount - 1 } : i\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h2>Fanikauppa</h2>\r\n      </header>\r\n      <div className=\"Products\">\r\n      <Cart cartItems={cartItems} onAdd={onAdd} onRemove={onRemove} clearCart={clearCart} />\r\n         <Products products={productData} onAdd={onAdd} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}